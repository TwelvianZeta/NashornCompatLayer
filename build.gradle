/*
 * Copyright (C) 2020-2021  ZekerZhayard
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

buildscript {
    repositories {
        jcenter()
        maven {
            url = "https://plugins.gradle.org/m2"
        }
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
    }
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "maven"
apply plugin: "maven-publish"
apply plugin: "com.jfrog.bintray"
apply plugin: "com.matthewprenger.cursegradle"

version = "${mod_version}${-> getVersionSuffix()}"
group = "io.github.zekerzhayard"
archivesBaseName = "nashorn-compat-layer"

sourceCompatibility = targetCompatibility = "15"

compileJava {
    sourceCompatibility = targetCompatibility = "15"
    options.compilerArgs += ["--add-exports", "java.base/jdk.internal.loader=ALL-UNNAMED", "--add-exports", "java.base/jdk.internal.misc=ALL-UNNAMED"]
}


configurations {
    provided {
        compile.extendsFrom provided
    }
}

repositories {
    mavenCentral()
    maven {
        url = "https://files.minecraftforge.net/maven"
    }
}

dependencies {
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "cpw.mods:modlauncher:${modlauncher_version}"
    implementation "net.minecraftforge:forge:${forge_version}:launcher"
    implementation "org.apache.commons:commons-lang3:3.5"
    provided "org.openjdk.nashorn:nashorn-core:${nashorn_version}"
}

jar {
    manifest {
        attributes([
                "Name": "${project.group}.${project.archivesBaseName}".replace(".", "/"),
                "Specification-Title": "${project.name}",
                "Specification-Vendor": "ZekerZhayard",
                "Specification-Version": "${project.version}".split("-")[0],
                "Implementation-Title": "${project.name}",
                "Implementation-Version": "${project.version}",
                "Implementation-Vendor" :"ZekerZhayard",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Automatic-Module-Name": "${project.group}.${project.archivesBaseName}".replace("-", "_"),
                "Dependencies": configurations.provided.collect { dep ->
                    "/META-INF/libraries/${-> dep.getName()}"
                }.join(" "),
                "GitCommit": String.valueOf(System.getenv("GITHUB_SHA"))
        ])
    }

    from configurations.provided.collect {dep ->
        copy {
            from dep
            into "${buildDir}/tmp/dependencies/META-INF/libraries"
        }
        new File("${buildDir}/tmp/dependencies")
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId "${project.group}"
            artifactId "${project.archivesBaseName}"
            version "${project.version}"
        }
    }
}

bintray {
    user = project.hasProperty("bintray.user.name") ? project.property("bintray.user.name") : System.getenv("BINTRAY_USER")
    key = project.hasProperty("bintray.api.key") ? project.property("bintray.api.key") : System.getenv("BINTRAY_API_KEY")
    publications = ["mavenJava"]
    pkg {
        repo = "minecraft"
        name = "nashorn-compat-layer"
        userOrg = user
        licenses = ["GPL-2.0"]
        vcsUrl = "https://github.com/ZekerZhayard/NashornCompatLayer.git"
        labels = ["minecraft", "minecraftforge", "nashorn"]
        publicDownloadNumbers = true
        version {
            name = "${project.version}"
            desc = "A simple toy to allow MinecraftForge running under Java 15."
            released = new Date()
            vcsTag = "${project.version}"
        }
    }
}

if (System.getenv("CURSEFORGE_API_KEY") != null) {
    curseforge {
        apiKey = System.getenv("CURSEFORGE_API_KEY")
        project {
            id = "433595"
            releaseType = "release"
            mainArtifact jar, {
                displayName = "${archivesBaseName}-${version}"
            }
            addGameVersion "1.15.2"
            addGameVersion "1.16.1"
            addGameVersion "1.16.2"
            addGameVersion "1.16.3"
            addGameVersion "1.16.4"
            addGameVersion "Forge"
        }
    }
}

static String getVersionSuffix() {
    if (System.getenv("IS_PUBLICATION") != null) {
        return ""
    } else if (System.getenv("GITHUB_RUN_NUMBER") != null && System.getenv("GITHUB_SHA") != null) {
        return "-s." + System.getenv("GITHUB_RUN_NUMBER") + "-" + System.getenv("GITHUB_SHA").substring(0, 7)
    }
    return "-LOCAL"
}